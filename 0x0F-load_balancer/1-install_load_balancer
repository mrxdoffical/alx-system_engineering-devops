#!/usr/bin/env bash
# Install HAProxy
apt update
apt install -y haproxy

# Configure HAProxy
cat <<EOF > /etc/haproxy/haproxy.cfg
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend http_front
    bind *:80
    stats uri /haproxy?stats
    default_backend http_back

backend http_back
    balance roundrobin
    server web01 [STUDENT_ID]-web-01:80 check
    server web02 [STUDENT_ID]-web-02:80 check
EOF

# Configure HAProxy init script
cat <<EOF > /etc/init.d/haproxy
#!/bin/sh
### BEGIN INIT INFO
# Provides:          haproxy
# Required-Start:    \$local_fs \$network \$remote_fs
# Required-Stop:     \$local_fs \$network \$remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the haproxy load balancer
# Description:       starts haproxy using start-stop-daemon
### END INIT INFO

# Author:   HAProxy Technologies <contact@haproxy.com>

PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/haproxy
CONFIG=/etc/haproxy/haproxy.cfg
PIDFILE=/var/run/haproxy.pid
EXTRAOPTS="-Ws -f \$CONFIG -p \$PIDFILE"

test -x \$DAEMON || exit 0

. /lib/lsb/init-functions

# Include haproxy defaults if available
if [ -f /etc/default/haproxy ]; then
    . /etc/default/haproxy
fi

set -e

haproxy_parseopts() {
    # delete non-opt items from the list
    local i
    while [ \$# -gt 0 ]; do
        i=\$1
        case \$i in
        *=*) ;;
        *) shift
            continue
            ;;
        esac
        shift
    done
    echo "\$@"
}

haproxy_check() {
    \$DAEMON -c -q \$EXTRAOPTS || return 1
    return 0
}

haproxy_reload() {
    \$DAEMON -D -f \$CONFIG -p \$PIDFILE -sf \$(cat \$PIDFILE) \$EXTRAOPTS
}

haproxy_start() {
    haproxy_check || return 1
    echo -n "Starting haproxy: "
    start-stop-daemon --start --quiet --pidfile \$PIDFILE --exec \$DAEMON -- -D -f \$CONFIG -p \$PIDFILE \$EXTRAOPTS
    echo "\$DAEMON."
}

haproxy_stop() {
    echo -n "Stopping haproxy: "
    start-stop-daemon --stop --quiet --pidfile \$PIDFILE --oknodo
    echo "\$DAEMON."
}

case "\$1" in
    start)
        haproxy_start
        ;;
    stop)
        haproxy_stop
        ;;
    restart)
        haproxy_stop
        sleep 1
        haproxy_start
        ;;
    reload|force-reload)
        echo "Reloading haproxy config..."
        haproxy_check && haproxy_reload || echo "Reload failed, check config."
        ;;
    status)
        status_of_proc -p \$PIDFILE \$DAEMON haproxy && exit 0 || exit \$?
        ;;
    *)
        echo "Usage: /etc/init.d/haproxy {start|stop|restart|reload|force-reload|status}"
        exit 1
        ;;
esac
exit 0
EOF

# Set permissions on init script
chmod +x /etc/init.d/haproxy

# Start HAProxy service
service haproxy start
